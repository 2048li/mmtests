#!/bin/bash
P=dedup-install
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
GIT_LOCATION=https://github.com/davidlohr/ezdedup.git
MIRROR_LOCATION="$WEBROOT/ezdedup/"

install-depends libopenssl-devel

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

# Unconditionally fetch the tar to find out the real version number
TARFILE=dedup-${VERSION}.tar.gz
git_fetch $GIT_LOCATION dedup-${VERSION}-installed $MIRROR_LOCATION/$TARFILE $SHELLPACK_SOURCES/$TARFILE
cd $SHELLPACK_SOURCES
tar -xf $TARFILE
if [ $? -ne 0 ]; then
	error "$P: tar xf dedup-${VERSION}.tar.gz failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

# Rename directory to something we expect.
DST_DIR=`tar tf $TARFILE | head -n 1 | awk -F / '{print $1}'`
mv $DST_DIR dedup-${VERSION}-installed
pushd dedup-${VERSION}-installed > /dev/null || die Failed to rename tar

pushd $SHELLPACK_SOURCES/dedup-${VERSION}-installed || die Failed to change to source directory

# Patch benchmark to make it a ro/rw IO benchmark
TEMPFILE=`mktemp`
LINECOUNT=`wc -l $0 | awk '{print $1}'`
PATCHSTART=`grep -n "BEGIN PATCH FILE" $0 | tail -1 | awk -F : '{print $1}'`
tail -$(($LINECOUNT-$PATCHSTART)) $0 | grep -v "^###" > $TEMPFILE
cat $TEMPFILE | patch -p1 || exit $SHELLPACK_FAILURE
rm $TEMPFILE

make -j$NUMCPUS 
if [ $? -ne 0 ]; then
	error "$P: make failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

echo dedup installed successfully
exit $SHELLPACK_SUCCESS

==== BEGIN PATCH FILE ====
diff --git a/encoder.c b/encoder.c
index 3b86743e8f81..58314d6d3936 100644
--- a/encoder.c
+++ b/encoder.c
@@ -163,7 +163,7 @@ static void print_stats(stats_t *s) {
 
   //determine most suitable unit to use
   for(unit_idx=0; unit_idx<unit_str_size; unit_idx++) {
-    unsigned int unit_div_next = unit_div * 1024;
+    size_t unit_div_next = unit_div * 1024;
 
     if(s->total_input / unit_div_next <= 0) break;
     if(s->total_dedup / unit_div_next <= 0) break;
#### Description dedup
#### Details dedup 11
