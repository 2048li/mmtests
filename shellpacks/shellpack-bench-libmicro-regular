#!/bin/bash
P=libmicro-regular-bench
DEFAULT_VERSION=1
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/libmicro-regular-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/libmicro-regular-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-libmicro-regular -v ${VERSION}  || die libmicro-regular install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/libmicro-regular-${VERSION}-installed || die Failed to cd to libmicro-regular install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo libmicro-regular installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

cd $SHELLPACK_SOURCES/libmicro-regular-${VERSION}-installed || die Failed to cd to libmicro directory

COMMON="-E -C 2000 -B 10000 -L -S -W"

TMPROOT=/tmp/libmicro.$$
mkdir -p $TMPROOT
trap "rm -rf $TMPROOT" 0 2
IFILE=$TMPROOT/ifile
touch $IFILE

while read A B C; do
	monitor_pre_hook $LOGDIR_RESULTS $B
	if [ -f bin/$A ]; then
		eval bin/$A $COMMON -N "$B" $C 2>&1 > $LOGDIR_RESULTS/$B.log
	fi
	monitor_post_hook $LOGDIR_RESULTS $B
done <<EOT
getpid	getpid
getenv	getenv	-s 100
getenv	getenvT2	-s 100   -T 2
gettimeofday	gettimeofday
log	log
exp	exp
lrand48	lrand48
isatty	isatty_yes
isatty	isatty_no	-f	$IFILE
strtol	strtol
longjmp	longjmp
siglongjmp	siglongjmp
getrusage	getrusage
times	times
time	time
localtime_r	localtime_r
strftime	strftime
mktime	mktime
mktime	mktimeT2	-T 2
EOT

exit $SHELLPACK_SUCCESS
#### Description libmicro-regular
#### Details libmicro-regular-bench 4
