#!/bin/bash
P=johnripper-bench
DEFAULT_VERSION=1.8.0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--iterations)
		JOHNRIPPER_ITERATIONS=$2
		shift 2
		;;
	--duration)
		JOHNRIPPER_DURATION=$2
		shift 2
		;;
	--min-threads)
		JOHNRIPPER_MIN_THREADS=$2
		shift 2
		;;
	--max-threads)
		JOHNRIPPER_MAX_THREADS=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/johnripper-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/johnripper-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-johnripper -v ${VERSION}  || die johnripper install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/johnripper-${VERSION}-installed || die Failed to cd to johnripper install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo johnripper installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

cd $SHELLPACK_SOURCES/johnripper-${VERSION}-installed/run || die Failed to cd to johnripper install directory
THREADS=
START_THREAD=$JOHNRIPPER_MIN_THREADS
END_THREAD=$JOHNRIPPER_MAX_THREADS
if [ $END_THREAD -ge 32 ]; then
	THREADS=`seq $START_THREAD 4 8`
	THREADS="$THREADS `seq 12 9 32`"
	THREADS="$THREADS `seq 48 31 $END_THREAD`"
elif [ $END_THREAD -ge 8 ]; then
	THREADS=`seq $START_THREAD 3 8`
	THREADS="$THREADS `seq 12 6 $END_THREAD`"
else
	THREADS=`seq $START_THREAD 2 $END_THREAD`
fi
if [ `echo $THREADS | awk '{print $NF}'` -ne $END_THREAD ]; then
	THREADS="$THREADS $END_THREAD"
fi
for NR_THREADS in $THREADS; do
	mmtests_activity process $NR_THREADS/$END_THREAD
	mmtests_activity client $NR_THREADS/$JOHNRIPPER_MAX_THREADS	

	monitor_pre_hook $LOGDIR_RESULTS $NR_THREADS
for ITERATION in `seq 1 $JOHNRIPPER_ITERATIONS`; do
	mmtests_activity iteration $ITERATION
		echo Starting iteration $ITERATION/$JOHNRIPPER_ITERATIONS threads $NR_THREADS/$JOHNRIPPER_MAX_THREADS
		export OMP_NUM_THREADS=$NR_THREADS
		$TIME_CMD -o $LOGDIR_RESULTS/load-${NR_THREADS}-$ITERATION.time	\
			./john --test=$JOHNRIPPER_DURATION			\
			2>&1 | tee -a $LOGDIR_RESULTS/johnripper-$NR_THREADS-$ITERATION.log
done
	monitor_post_hook $LOGDIR_RESULTS $NR_THREADS
done

exit $SHELLPACK_SUCCESS
#### Description John the ripper is a parallelised password cracked
#### Details johnripper-bench 8
