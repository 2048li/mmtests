#!/bin/bash
# Run simoop benchmark

P=simoop-bench
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
TESTTIME=15
ITERATIONS=12

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--threads)
		SIMOOP_THREADS=$2
		shift 2
		;;
	--warm-time)
		SIMOOP_WARMTIME_DURATION=$2
		shift 2
		;;
	--run-time)
		SIMOOP_RUNTIME_DURATION=$2
		shift 2
		;;
	--burn-threads)
		SIMOOP_BURN_THREADS=$2
		shift 2
		;;
	--du-threads)
		SIMOOP_DU_THREADS=$2
		shift 2
		;;
	--rw-threads)
		SIMOOP_READWRITE_THREADS=$2
		shift 2
		;;
	--working-set-thread)
		SIMOOP_WORKINGSET_THREAD_MB=$2
		shift 2
		;;
	--filesize)
		SIMOOP_FILESIZE_MB=$2
		shift 2
		;;
	--read-size)
		SIMOOP_READSIZE_MB=$2
		shift 2
		;;
	--write-size)
		SIMOOP_WRITESIZE_MB=$2
		shift 2
		;;
	--report-frequency)
		SIMOOP_REPORT_FREQUENCY=$2
		shift 2
		;;
	--nr-directories)
		SIMOOP_FILE_DIRECTORIES=$2
		shift 2
		;;
	--nr-files)
		SIMOOP_NUMFILES=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/simoop-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/simoop-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-simoop -v ${VERSION}  || die simoop install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/simoop-${VERSION}-installed || die Failed to cd to simoop install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo simoop installed only as requested.
	exit $SHELLPACK_SUCCESS
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

# Create benchmark directories
SIMOOP_DIRECTORIES=
for i in `seq 1 $SIMOOP_FILE_DIRECTORIES`; do
	mkdir $SHELLPACK_TEMP/$i
done

# Create benchmark parameters
SIMOOP_PARAMS="
	-t $SIMOOP_THREADS
	-w $SIMOOP_WARMTIME_DURATION
	-r $SIMOOP_RUNTIME_DURATION
	-C $SIMOOP_BURN_THREADS
	-D $SIMOOP_DU_THREADS
	-T $SIMOOP_READWRITE_THREADS
	-m $SIMOOP_WORKINGSET_THREAD_MB
	-f $SIMOOP_FILESIZE_MB
	-R $SIMOOP_READSIZE_MB
	-W $SIMOOP_WRITESIZE_MB
	-i $SIMOOP_REPORT_FREQUENCY
	-n $SIMOOP_NUMFILES
	-M 128
	$SHELLPACK_TEMP/*
"

ulimit -n 65534

echo Executing simoop $SIMOOP_PARAMS
monitor_pre_hook $LOGDIR_RESULTS simoop
save_rc eval ./simoop $SIMOOP_PARAMS 2>&1 | tee $LOGDIR_RESULTS/simoop.log
recover_rc
monitor_post_hook $LOGDIR_RESULTS $NR_THREADS

if [ $EXIT_CODE -ne 0 ]; then
	exit $SHELLPACK_ERROR
fi
exit $SHELLPACK_SUCCESS
#### Description simoop
#### Details simoop-bench 4
