#!/bin/bash
P=dbt5-bench
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

DBDRIVER=postgres
DBUSER=nobody
EFFECTIVE_CACHESIZE=$((756*1048576))
SHARED_BUFFERS=$((32*1048576))
WORK_MEM=$((32*1048576))
POSTGRES_VERSION=9.3.4

install-depends python-singledispatch
install-depends python-rpy2

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--effective-cachesize)
		EFFECTIVE_CACHESIZE=$2
		shift 2
		;;
	--shared-buffers)
		SHARED_BUFFERS=$2
		shift 2
		;;
	--work-mem)
		WORK_MEM=$2
		shift 2
		;;
	--dbdriver)
		DBDRIVER=$2
		shift 2
		;;
	--iterations)
		MAX_ITERATIONS=$2
		shift 2
		;;
	--min-users)
		MIN_USERS=$2
		shift 2
		;;
	--max-users)
		MAX_USERS=$2
		shift 2
		;;
	--user-scale)
		USER_SCALE=$2
		shift 2
		;;
	--nr-customers)
		NR_CUSTOMERS=$2
		shift 2
		;;
	--nr-trade-days)
		NR_TRADE_DAYS=$2
		shift 2
		;;
	--scale-factor)
		SCALE_FACTOR=$2
		shift 2
		;;
	--duration)
		DURATION=$2
		shift 2
		;;
	--pacing-delay)
		PACING_DELAY=$2
		shift 2
		;;
	--setup-only)
		SETUP_ONLY=yes
		shift
		;;
	--bench-only)
		BENCH_ONLY=yes
		shift
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/dbt5-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/dbt5-${VERSION}-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-dbt5 -v ${VERSION} --dbdriver ${DBDRIVER} || die dbt5 install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/dbt5-${VERSION}-installed || die Failed to cd to dbt5 install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo dbt5 installed only as requested.
	exit $SHELLPACK_SUCCESS
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

echo Configuring paths for $DBDRIVER
export EGENDIR=$SHELLPACK_SOURCES/dbt5-${VERSION}/egen
export DBT5PGROOT=$SHELLPACK_SOURCES/dbt5-${VERSION}-installed/data
mkdir -p $DBT5PGROOT
chmod a+rwx $DBT5PGROOT
chmod a+rwx $EGENDIR
export DBT5DBNAME=dbt5
export DBT5PGDATA=$DBT5PGROOT/dbt5
#export DBT5PGDATA=$SHELLPACK_SOURCES/postgresbuild-${VERSION}-installed/data
# export DBT5TSDIR=/mnt/dbt5
export PATH=$SHELLPACK_SOURCES/dbt5-${VERSION}-installed/bin:$PATH
if [ "$DBDRIVER" = "postgres" ]; then
	PSQL=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/bin/psql
	RUNDBUSER="su -s /bin/bash $DBUSER -c"
	export PATH=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/bin:$PATH
	export LD_LIBRARY_PATH=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/lib:$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/lib64
	export PGHOST=localhost
	export PGPORT=5432
fi

if [ "$BENCH_ONLY" != "yes" ]; then
	# Initialise database
	cd $DBT5PGROOT
	$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop
	$TIME_CMD -o $LOGDIR_RESULTS/time-install.log $RUNDBUSER "dbt5-pgsql-build-db -c $NR_CUSTOMERS -s $SCALE_FACTOR -w $NR_TRADE_DAYS -l $PGPORT"
	if [ $? -ne 0 ]; then
		die Failed to initialise database
	fi
fi

if [ "$SETUP_ONLY" = "yes" ]; then
	exit $SHELLPACK_SUCCESS
fi

chmod a+w $SHELLPACK_TEMP
echo Running users $MIN_USERS to $MAX_USERS, scaling $USER_SCALE
THREADS=
START_THREAD=$MIN_USERS
END_THREAD=$MAX_USERS
if [ $END_THREAD -ge 32 ]; then
	THREADS=`seq $START_THREAD 4 8`
	THREADS="$THREADS `seq 12 9 32`"
	THREADS="$THREADS `seq 48 31 $END_THREAD`"
elif [ $END_THREAD -ge 8 ]; then
	THREADS=`seq $START_THREAD 3 8`
	THREADS="$THREADS `seq 12 6 $END_THREAD`"
else
	THREADS=`seq $START_THREAD 2 $END_THREAD`
fi
if [ `echo $THREADS | awk '{print $NF}'` -ne $END_THREAD ]; then
	THREADS="$THREADS $END_THREAD"
fi
for NR_THREADS in $THREADS; do
	mmtests_activity process $NR_THREADS/$END_THREAD
NR_USERS=$((NR_THREADS*USER_SCALE))
if [ $NR_USERS -lt $MIN_USERS ]; then
	continue
fi
monitor_pre_hook $LOGDIR_RESULTS $NR_USERS
for ITERATION in `seq 1 $MAX_ITERATIONS;`; do
	mmtests_activity iteration $ITERATION
	mmtests_activity users-$NR_USERS-$ITERATION

	# Shutdown previous instance and wait
	$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop
	killall BrokerageHouseMain 2> /dev/null
	killall MarketExchangeMain 2> /dev/null
	killall DriverMain 2> /dev/null
	sleep 5
	killall -KILL BrokerageHouseMain 2> /dev/null
	killall -KILL MarketExchangeMain 2> /dev/null
	killall -KILL DriverMain 2> /dev/null
	echo -n Waiting for socket to be clear
	while [ "`netstat -n | grep :30000`" != "" ]; do
		echo -n .
		sleep 1
	done
	echo

	echo Executing thread $NR_USERS/$((MAX_USERS*USER_SCALE)) interation $ITERATION/$MAX_ITERATIONS
	$TIME_CMD -o $LOGDIR_RESULTS/time-${NR_USERS}-${ITERATION}.log $RUNDBUSER "dbt5-run-workload -a pgsql						\
		-c $NR_CUSTOMERS -t $NR_CUSTOMERS -f $SCALE_FACTOR -w $NR_TRADE_DAYS	\
		-l $PACING_DELAY -s 500							\
		-p $PGPORT -n dbt5							\
		-d $DURATION								\
		-u $NR_USERS								\
		-o $SHELLPACK_TEMP/dbt5-run" 2>&1 | tee dbt5-${NR_USERS}-${ITERATION}.log
	cp $SHELLPACK_TEMP/dbt5-run/results.txt $LOGDIR_RESULTS/results-${NR_USERS}-${ITERATION}.txt
	pushd $SHELLPACK_TEMP > /dev/null
	tar -czf $LOGDIR_RESULTS/dblogs-${NR_USERS}-${ITERATION}.tar.gz dbt5-run
	popd > /dev/null
	rm -rf $SHELLPACK_TEMP/dbt5-run
	$RUNDBUSER "rm -rf $SHELLPACK_TEMP/dbt5-run"
done
monitor_post_hook $LOGDIR_RESULTS $NR_USERS
done
$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop

exit $SHELLPACK_SUCCESS
#### Description dbt5
#### Details dbt5-bench 49
