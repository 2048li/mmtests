#!/bin/bash
# john the ripper installer
P=johnripper-install
DEFAULT_VERSION=1.8.0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
WEB_LOCATION=http://www.openwall.com/john/j
MIRROR_LOCATION="$WEBROOT/johnripper/"

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

# Unconditionally fetch the tar to find out the real version number
TARFILE=john-${VERSION}.tar.xz
sources_fetch $WEB_LOCATION/$TARFILE $MIRROR_LOCATION/$TARFILE $SHELLPACK_SOURCES/$TARFILE
cd $SHELLPACK_SOURCES
tar -xf $TARFILE
if [ $? -ne 0 ]; then
	error "$P: tar xf john-${VERSION}.tar.xz failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

# Rename directory to something we expect.
DST_DIR=`tar tf $TARFILE | head -n 1 | awk -F / '{print $1}'`
mv $DST_DIR johnripper-${VERSION}-installed
pushd johnripper-${VERSION}-installed > /dev/null || die Failed to rename tar

# Build
pushd $SHELLPACK_SOURCES/johnripper-${VERSION}-installed || die Failed to change to source directory
for FILE in `find -name "*"`; do
	touch $FILE
done
cd src
sed -i -e "s/^OMPFLAGS.*/OMPFLAGS = -fopenmp/" Makefile
case `uname -m` in
x86_64)
	make clean linux-x86-64 || die Failed to build john the ripper
	;;
ppc64|ppc64le)
	make clean linux-ppc64 || die Failed to build john the ripper
	;;
*)
	die Arch `uname -m` unsupported
esac

echo john the ripper installed successfully
#### Description John the ripper is a parallelised password cracked
#### Details johnripper 9
