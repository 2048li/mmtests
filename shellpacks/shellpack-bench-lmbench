#!/bin/bash
# This script installs and runs lmbench
# All parameters are passed by environment variables

P=lmbench-bench
VERSION=3
NUM_CPU=$(grep -c '^processor' /proc/cpuinfo)

. $SHELLPACK_INCLUDE/common.sh

# Basic args parser
while [ "$1" != "" ]; do
	case "$1" in
		-v)
			VERSION=$2
			shift 2
			;;
		*)	echo Unrecognised option: $1
			shift
			;;
	esac
done

# Install if necessary
if [ ! -d $SHELLPACK_SOURCES/lmbench${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-lmbench -v ${VERSION} || die lmbench install script returned error
fi
cd $SHELLPACK_SOURCES/lmbench${VERSION}-installed || die Failed to cd to lmbench install directory

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

for LMBENCH_TEST in $LMBENCH_TESTS; do
	# Prepare test
	case $LMBENCH_TEST in
	lat_mmap)
		dd if=/dev/zero of=$SHELLPACK_TEMP/lmbench.file ibs=4096 count=$((LMBENCH_LATMMAP_FILESIZE/4096))
		;;
	lat_ctx)
		echo
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for preparation"
		;;
	esac

	# Run test
	monitor_pre_hook $LOGDIR_RESULTS $LMBENCH_TEST
	LMBENCH_RESULTS=$LOGDIR_RESULTS/lmbench-$LMBENCH_TEST.log

	case $LMBENCH_TEST in
	lat_mmap)
		./bin/$LMBENCH_TEST \
			-N $LMBENCH_LATMMAP_ITERATIONS \
			$LMBENCH_LATMMAP_FILESIZE $SHELLPACK_TEMP/lmbench.file \
				2>&1 | tee -a $LMBENCH_RESULTS
		;;
	lat_ctx)
		CLIENT=1
		while [ $CLIENT -lt $LMBENCH_LATCTX_MAXCLIENTS ]; do
			./bin/$LMBENCH_TEST \
				-s $LMBENCH_LATCTX_SIZE \
				$CLIENT 2>&1 | tee -a $LMBENCH_RESULTS
			if [ $CLIENT -lt $NUM_CPU ]; then
				CLIENT=$((CLIENT+1))
			else
				CLIENT=$((CLIENT+7))
			fi
		done
		;;
	*)
		die "Unrecognised test $LMBENCH_TEST for execution"
		;;
	esac
	monitor_post_hook $LOGDIR_RESULTS $LMBENCH_TEST 

	rm -f $SHELLPACK_TEMP/lmbench.file 2> /dev/null
done

exit $SHELLPACK_SUCCESS
#### Description lmbench
#### Details lmbench-bench 10
