#!/bin/bash
P=pipetest-install
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
WEB_LOCATION="http://people.redhat.com/mingo/cfs-scheduler/tools/pipe-test.c"
MIRROR_LOCATION="$WEBROOT/pipetest/pipe-test.c"

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

install-depends perl-Math-Round

cd $SHELLPACK_SOURCES || die Sources directory does not exist
rm -rf pipetest-${VERSION}-installed
mkdir -p pipetest-${VERSION}-installed

sources_fetch $WEB_LOCATION $MIRROR_LOCATION $SHELLPACK_SOURCES/pipetest-${VERSION}-installed/pipe-test.c
cd $SHELLPACK_SOURCES/pipetest-${VERSION}-installed
gcc -O2 pipe-test.c -o pipe-test
if [ $? -ne 0 ]; then
	die "$P: Failed to build pipetest"
fi

exit $SHELLPACK_SUCCESS
#### Description Run the pipe-test benchmark
#### Details pipetest 16
