#!/bin/bash
# Run perf-bench futex benchmark

P=futexbench-bench
DEFAULT_VERSION=3.16.3
. $SHELLPACK_INCLUDE/common.sh
TESTTIME=15
ITERATIONS=12
TESTLIST=

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--workloads)
		WORKLOADS=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/futexbench-${VERSION}
fi
if [ ! -d $SHELLPACK_SOURCES/futexbench-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-futexbench -v ${VERSION}  || die futexbench install script returned error
fi
cd $SHELLPACK_SOURCES/futexbench-${VERSION}-installed || die Failed to cd to futexbench install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo futexbench installed only as requested.
	exit $SHELLPACK_SUCCESS
fi

# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

PERF_DIR=$SHELLPACK_SOURCES/futexbench-${VERSION}-installed/tools/perf/
PERF_CMD=${PERF_DIR}/perf

echo $WORKLOADS > $LOGDIR_RESULTS/workloads
for WORKLOAD in $WORKLOADS; do
	echo Running test $WORKLOAD
	monitor_pre_hook $LOGDIR_RESULTS $NUMCPUS
	$PERF_CMD bench futex $WORKLOAD 2>&1 | \
		tee $LOGDIR_RESULTS/$WORKLOAD-${NUMCPUS}.log \
			|| die Failed ro run perf-bench futex
	monitor_post_hook $LOGDIR_RESULTS $NUMCPUS
done

exit $SHELLPACK_SUCCESS
#### Description perf-bench futex
#### Details futexbench-bench 3
