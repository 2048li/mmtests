#!/bin/bash
# memslap installer
P=memslap-install
WEB_LOCATION=https://launchpad.net/libmemcached
MIRROR_LOCATION="$WEBROOT/libmemcached"
DEFAULT_VERSION=1.0.6
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
while [ "$1" != "" ]; do
	case "$1" in
		-v)
			VERSION=$2
			shift 2
			;;
		*)
			die Unrecognised option: $1
			shift
		esac
done

if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

# Install memcached if necessary
if [ ! -e $SHELLPACK_SOURCES/memcached-${VERSION}-installed ]; then
	$SHELLPACK_INCLUDE/shellpack-install-memcached --install-only || die Failed to install
fi

# Unconditionally fetch the tar to find out the real version number
BASE_VERSION=`echo $VERSION | sed -e 's/.[0-9]$//'`
WEB_LOCATION=$WEB_LOCATION/$BASE_VERSION/$VERSION/+download/
TARFILE=libmemcached-${VERSION}.tar.gz
sources_fetch $WEB_LOCATION/$TARFILE $MIRROR_LOCATION/$TARFILE $SHELLPACK_SOURCES/$TARFILE

# Building from scratch, uncompress the tar
cd $SHELLPACK_SOURCES
tar xf $TARFILE
if [ $? -ne 0 ]; then
	error "$P: tar xf $TARFILE failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

# Rename directory to something we expect.
DST_DIR=`tar tf $TARFILE | head -n 1 | awk -F / '{print $1}'`
mv $DST_DIR libmemcached-${VERSION}
pushd libmemcached-${VERSION} > /dev/null || die Failed to rename tar

# Build configure script
./config/autorun.sh || die Failed to generate configure script

# Patch for memaslap to build
grep -v pandora_print_callstack clients/ms_sigsegv.c > clients/ms_sigsegv.c.tmp
mv clients/ms_sigsegv.c.tmp clients/ms_sigsegv.c

# Build and install
LDFLAGS="-lpthread -levent" ./configure \
	--prefix=$SHELLPACK_SOURCES/memslap-${VERSION}-installed \
	--enable-memaslap \
		|| die configure failed
make -j4 || die make failed
make install || die install failed

echo memslap installed successfully
#### Description memslap benchmark for memcached
#### Details memslap 50
