#!/bin/bash
# This is the script for running the ringtest benchmark
P=ringtest-bench
DEFAULT_VERSION=0
. $SHELLPACK_INCLUDE/common.sh
TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi
ITERATIONS=1

# Basic argument parser
TASKSET_SERVER=
TASKSET_CLIENT=
SERVERSIDE_COMMAND=none
SERVERSIDE_NAME=`date +%Y%m%d-%H%M-%S`

while [ "$1" != "" ]; do
	case "$1" in
	-v)
		VERSION=$2
		shift 2
		;;
	--serverside-command)
		SERVERSIDE_COMMAND=$2
		shift 2
		;;
	--serverside-name)
		SERVERSIDE_NAME=$2
		shift 2
		;;
	--install-only)
		INSTALL_ONLY=yes
		shift
		;;
	--install-force)
		INSTALL_FORCE=yes
		shift
		;;
	--min-tasks)
		RINGTEST_MIN_TASKS=$2
		shift 2
		;;
	--max-tasks)
		RINGTEST_MAX_TASKS=$2
		shift 2
		;;
	--iterations)
		RINGTEST_ITERATIONS=$2
		shift 2
		;;
	*)
		echo Unrecognised option: $1
		shift
	esac
done
if [ "$TASKSET_SERVER" != "" ]; then
	echo TASKSET_SERVER: $TASKSET_SERVER
	echo TASKSET_CLIENT: $TASKSET_CLIENT
fi
if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

if [ "$INSTALL_FORCE" = "yes" ]; then
	rm -rf $SHELLPACK_SOURCES/ringtest
fi
if [ ! -d $SHELLPACK_SOURCES/ringtest-installed ]; then
	mmtests_activity source-install
	$SHELLPACK_INCLUDE/shellpack-install-ringtest -v ${VERSION}  || die ringtest install script returned error
	mmtests_activity source-installed
fi
cd $SHELLPACK_SOURCES/ringtest-${VERSION}-installed || die Failed to cd to ringtest install directory
if [ "$INSTALL_ONLY" = "yes" ]; then
	echo ringtest installed only as requested.
	exit $SHELLPACK_SUCCESS
fi
# Include monitor hooks
. $SHELLPACK_INCLUDE/include-monitor.sh

pushd $SHELLPACK_SOURCES/ringtest-${VERSION}-installed > /dev/null
RESULTSLOG=$LOGDIR_RESULTS/hackbench

THREADS=
START_THREAD=$RINGTEST_MIN_TASKS
END_THREAD=$RINGTEST_MAX_TASKS
if [ $END_THREAD -gt 32 ]; then
	THREADS=`seq $START_THREAD 3 8`
	THREADS="$THREADS `seq 12 9 32`"
	THREADS="$THREADS `seq 48 31 $END_THREAD`"
elif [ $END_THREAD -gt 8 ]; then
	THREADS=`seq $START_THREAD 2 8`
	THREADS="$THREADS `seq 12 6 $END_THREAD`"
else
	THREADS=`seq $START_THREAD 2 $END_THREAD`
fi
if [ `echo $THREADS | awk '{print $NF}'` -ne $END_THREAD ]; then
	THREADS="$THREADS $END_THREAD"
fi

for NR_THREADS in $THREADS; do
	if [ $NR_THREADS -lt $RINGTEST_MIN_TASKS ]; then
		continue
	fi
	mmtests_activity process $NR_THREADS/$END_THREAD
	monitor_pre_hook $LOGDIR_RESULTS $NR_THREADS
	mmtests_activity Tasks-$NR_THREADS
for ITERATION in `seq 1 $RINGTEST_ITERATIONS`; do
	mmtests_activity iteration $ITERATION
		echo Running $NR_THREADS tasks iteration $ITERATION/$RINGTEST_ITERATIONS
		$TIME_CMD -o $LOGDIR_RESULTS/time-$NR_THREADS-$ITERATION \
			./ring-test $NR_THREADS > /dev/null
		if [ $? -ne 0 ]; then
			die Failed to run ring-test
		fi
done
	monitor_post_hook $LOGDIR_RESULTS $NR_THREADS
done

exit $SHELLPACK_SUCCESS
#### Description ringtest
#### Details ringtest-bench 9
