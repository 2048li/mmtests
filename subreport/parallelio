echo
gendirlist parallelio
printheader

# Generate plot files
for DIR in $DIRLIST; do
	INPUTS="$INPUTS `pwd`/$DIR/$TOPLEVEL/parallelio.plot"
	TITLES="$TITLES `echo $DIR | sed -e 's/parallelio-//'`"
	echo -n > `pwd`/$DIR/$TOPLEVEL/parallelio.plot
	echo -n > `pwd`/$DIR/$TOPLEVEL/parallelio-swaptotal.plot
	echo -n > `pwd`/$DIR/$TOPLEVEL/parallelio-swapin.plot
	echo -n > `pwd`/$DIR/$TOPLEVEL/parallelio-ioduration.plot
done

calc_iosize() {
	IO_SIZE_BYTES=`grep "^$IO_STEP " parallelio-$KERNEL_BASE/$TOPLEVEL/io-durations.log | awk '{print $2}' | head -1`
	if [ $IO_SIZE_BYTES -le 1000 ]; then
		IO_SIZE=$IO_SIZE_BYTES
	elif [ $IO_SIZE_BYTES -le 1048576 ]; then
		IO_SIZE=$((IO_SIZE_BYTES/1024))K
	else
		IO_SIZE=$((IO_SIZE_BYTES/1048576))M
	fi
}

MIN_INDEX=0
min_index() {
	MIN_VALUE=99999999
	MIN_INDEX=0
	for FILE in $2/memcachetest-$1-*; do
		RESULT=`grep ops/sec $FILE/$TOPLEVEL/mmtests.log | awk '{print $NF}'`
		if [ $RESULT -le $MIN_VALUE ]; then
			MIN_VALUE=$RESULT
			MIN_INDEX=`echo $FILE | awk -F - '{print $NF}'`
		fi
	done
}

# Hard-coding the workload for now
echo Memcachetest during Parallel IO
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize
	min_index $IO_STEP parallelio-$KERNEL_BASE/$TOPLEVEL

	printf "%-22s" "memcachetest-$IO_SIZE"
	VANILLA=`grep ops/sec parallelio-$KERNEL_BASE/$TOPLEVEL/memcachetest-$IO_STEP-$MIN_INDEX/$TOPLEVEL/mmtests.log | awk '{print $NF}'`

	for DIR in $DIRLIST; do
		min_index $IO_STEP $DIR/$TOPLEVEL
		RESULT=`grep ops/sec $DIR/$TOPLEVEL/memcachetest-$IO_STEP-$MIN_INDEX/$TOPLEVEL/mmtests.log | awk '{print $NF}'`
		printf " %9d (%7.2f%%)" $RESULT `pdiff $RESULT $VANILLA`

		# Generate something useful for a lot
		echo $IO_SIZE_BYTES $RESULT >> $DIR/$TOPLEVEL/parallelio.plot
	done
	echo
done

# Print statistics on the duration of IO
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize
	min_index $IO_STEP parallelio-$KERNEL_BASE/$TOPLEVEL

	printf "%-22s" "IO Completions $IO_SIZE"
	VANILLA=`grep "^$IO_STEP " parallelio-$KERNEL_BASE/$TOPLEVEL/io-durations.log | awk '{print $4}' | head -$MIN_INDEX | tail -1`
	for DIR in $DIRLIST; do
		min_index $IO_STEP $DIR/$TOPLEVEL
		RESULT=`grep "^$IO_STEP " $DIR/$TOPLEVEL/io-durations.log | awk '{print $4}' | head -$MIN_INDEX | tail -1`
		printf " %9d (%7.2f%%)" $RESULT `pndiff $RESULT $VANILLA`

		# Generate something useful for a lot
		echo $IO_SIZE_BYTES $RESULT >> $DIR/$TOPLEVEL/parallelio-ioduration.plot
	done
	echo
done

# First parse all the vmstat files and put them in a more usable
# format
rm `find -name "pvmstat*.log"` 2> /dev/null
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	for DIR in $DIRLIST; do
		min_index $IO_STEP $DIR/$TOPLEVEL
		VMSTAT="$DIR/$TOPLEVEL/vmstat-memcachetest-$IO_STEP-$MIN_INDEX.log"

		# Break out individual fields
		for FIELD in pswpin pswpout kswapd_skip_congestion_wait pgfault pgmajfault; do
			OUTPUT=`echo $VMSTAT | sed -e "s/vmstat/pvmstat-$FIELD/" -e "s/-[0-9].log/.log/"`
			START=`grep $FIELD $VMSTAT | head -1 | awk '{print $2}'`
			END=`grep $FIELD $VMSTAT | tail -1 | awk '{print $2}'`
			VALUE=$((END-START))
			echo $VALUE >> $OUTPUT
		done

		# Aggregate fields
		OUTPUT=`echo $VMSTAT | sed -e "s/vmstat/pvmstat-pswptotal/" -e "s/-[0-9].log/.log/"`
		SWAPIN_START=`grep pswpin $VMSTAT | head -1 | awk '{print $2}'`
		SWAPIN_END=`grep pswpin $VMSTAT | tail -1 | awk '{print $2}'`
		SWAPIN=$((SWAPIN_END-SWAPIN_START))
		SWAPOUT_START=`grep pswpout $VMSTAT | head -1 | awk '{print $2}'`
		SWAPOUT_END=`grep pswpout $VMSTAT | tail -1 | awk '{print $2}'`
		SWAPOUT=$((SWAPOUT_END-SWAPOUT_START))
		echo $((SWAPIN+SWAPOUT)) >> $OUTPUT

		OUTPUT=`echo $VMSTAT | sed -e "s/vmstat/pvmstat-pgminfault/" -e "s/-[0-9].log/.log/"`
		PGMAJFAULT_START=`grep pgmajfault $VMSTAT | head -1 | awk '{print $2}'`
		PGMAJFAULT_END=`grep pgmajfault $VMSTAT | tail -1 | awk '{print $2}'`
		PGMAJFAULT=$((PGMAJFAULT_END-PGMAJFAULT_START))
		PGFAULT_START=`grep pgfault $VMSTAT | head -1 | awk '{print $2}'`
		PGFAULT_END=`grep pgfault $VMSTAT | tail -1 | awk '{print $2}'`
		PGFAULT=$((PGFAULT_END-PGFAULT_START))
		echo $((PGFAULT-PGMAJFAULT)) >> $OUTPUT
	done
done

# Print statistics on swapping
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize

	printf "%-22s" "swap in/out $IO_SIZE"
	VANILLA=`cat parallelio-$KERNEL_BASE/$TOPLEVEL/pvmstat-pswptotal-memcachetest-$IO_STEP.log`
	for DIR in $DIRLIST; do
		RESULT=`cat $DIR/$TOPLEVEL/pvmstat-pswptotal-memcachetest-$IO_STEP.log`
		printf " %9d (%7.2f%%)" $RESULT `pndiff $RESULT $VANILLA`

		# Generate something useful for a lot
		echo $IO_SIZE_BYTES $RESULT >> $DIR/$TOPLEVEL/parallelio-swaptotal.plot
	done
	echo
done

# Print statistics on swap in
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize

	printf "%-22s" "swap in $IO_SIZE"
	VANILLA=`cat parallelio-$KERNEL_BASE/$TOPLEVEL/pvmstat-pswpin-memcachetest-$IO_STEP.log`
	for DIR in $DIRLIST; do
		RESULT=`cat $DIR/$TOPLEVEL/pvmstat-pswpin-memcachetest-$IO_STEP.log | mean`
		printf " %9d (%7.2f%%)" $RESULT `pndiff $RESULT $VANILLA`

		# Generate something useful for a lot
		echo $IO_SIZE_BYTES $RESULT >> $DIR/$TOPLEVEL/parallelio-swapin.plot
	done
	echo
done

# Print statistics on minor faults
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize

	printf "%-22s" "minor faults $IO_SIZE"
	VANILLA=`cat parallelio-$KERNEL_BASE/$TOPLEVEL/pvmstat-pgminfault-memcachetest-$IO_STEP.log`
	for DIR in $DIRLIST; do
		RESULT=`cat $DIR/$TOPLEVEL/pvmstat-pgminfault-memcachetest-$IO_STEP.log`
		printf " %9d (%7.2f%%)" $RESULT `pndiff $RESULT $VANILLA`
	done
	echo
done

# Print statistics on major faults
for IO_STEP in `awk '{print $2}' parallelio-$KERNEL_BASE/$TOPLEVEL/workload-durations.log | uniq`; do
	calc_iosize

	printf "%-22s" "major faults $IO_SIZE"
	VANILLA=`cat parallelio-$KERNEL_BASE/$TOPLEVEL/pvmstat-pgmajfault-memcachetest-$IO_STEP.log`
	for DIR in $DIRLIST; do
		RESULT=`cat $DIR/$TOPLEVEL/pvmstat-pgmajfault-memcachetest-$IO_STEP.log`
		printf " %9d (%7.2f%%)" $RESULT `pndiff $RESULT $VANILLA`
	done
	echo
done
