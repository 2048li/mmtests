### This is a number of microbenchmarks that are mostly per-based. They evaluate
### the performance and scalability of a number of IPC primitives.
DIRNAME=`dirname $0`
SCRIPTDIR=`cd "$DIRNAME" && pwd`

# MM Test Parameters
export MMTESTS="ipcscale-sysvsempp"
export RUN_WARMUP=

# Profiling parameters
export RUN_NOPROFILE=yes
export RUN_FINEPROFILE=no
export RUN_COARSEPROFILE=no
#export OPROFILE_REPORT_ANNOTATE=yes
#export OPROFILE_REPORT_CALLGRAPH=8

# Fixups
if [ "`which check-confidence.pl 2> /dev/null`" = "" ]; then
	export PATH=$SCRIPTDIR/bin:$PATH
fi
if [ "`which oprofile_report.sh 2> /dev/null`" = "" ]; then
	export PATH=$SCRIPTDIR/vmr/bin:$PATH
fi

# Machine configuration
# Swap configuration can be one of default, partitions, swapfile, NFS
#export VM_DIRTY_RATIO=20
export VM_TRANSPARENT_HUGEPAGES_DEFAULT=default
export SWAP_CONFIGURATION=default
export SWAP_PARTITIONS=
export SWAP_SWAPFILE_SIZEMB=$((MEMTOTAL_BYTES/1048576))
export SWAP_NFS_MOUNT=192.168.10.7:/exports/`hostname`-swapfile
export SWAP_NBD_DEVICE=/dev/nbd0
export SWAP_NBD_HOST=mcp
export SWAP_NBD_PORT=10001

# Optionally use a memory control group
# export MEMCG_SIZE=$((MEMTOTAL_BYTES/2))

# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=xfs
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=inode64,delaylog,logbsize=262144,nobarrier
#
# Test NFS disk to setup (optional)
#export TESTDISK_NFS_MOUNT=192.168.10.7:/exports/`hostname`
#
# Test NBD disk to setup (optional)
#export TESTDISK_NBD_DEVICE=/dev/nbd0
#export TESTDISK_NBD_HOST=mcp
#export TESTDISK_NBD_PORT=100`ifconfig eth0 | sed -n 2p | cut -d ":" -f2 | cut -d " " -f1 | cut -d "." -f4`

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_PLAIN=
export MONITORS_GZIP="proc-vmstat mpstat"
export MONITORS_WITH_LATENCY="vmstat"
export MONITOR_UPDATE_FREQUENCY=10

# futexbench
export FUTEXBENCH_MIN_THREADS=2
export FUTEXBENCH_MAX_THREADS=$((NUMCPUS*64))
export FUTEXBENCH_SHARED=no

# IPCScale
#  threads per core, no more than two make sense.
#  Iterations will be bounded by NR_CPUS * [MIN_THREADS, MAX_THREADS]
#  hard limits -- increments in such ranges are left to the ipcscale
#  program.
export IPCSCALE_MIN_THREADS=1
export IPCSCALE_MAX_THREADS=1
export IPCSCALE_COMPLEXOPS=4
export IPCSCALE_ITERATIONS=3
export IPCSCALE_RUNTIME=5 # secs

# sembench
export SEMBENCH_MIN_THREADS=2
export SEMBENCH_MAX_THREADS=$((NUMCPUS*64))

# futexwait
export FUTEXWAIT_ITERATIONS=5
export FUTEXWAIT_MIN_THREADS=2
export FUTEXWAIT_MAX_THREADS=$((NUMCPUS*64))

# filelockperf
export FILELOCKPERF_ITERATIONS=10
export FILELOCKPERF_MIN_THREADS=2
export FILELOCKPERF_MAX_THREADS=$((NUMCPUS*8))
export FILELOCKPERF_LOCKITERS=1024 # number of times each thread does a lock/unlock pair.
 # single: single file for all tasks
 # multi: each task deals with its own file
export FILELOCKPERF_LOCKTYPES="single,multi"
