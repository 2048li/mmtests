#!/bin/bash
# vmscale installer
###SHELLPACK preamble vmscale-install 1
GIT_LOCATION=https://github.com/aristeu/vm-scalability
MIRROR_LOCATION="$WEBROOT/vmscale"

###SHELLPACK parseargBegin
###SHELLPACK parseargEnd

###SHELLPACK git_fetch vmscale-${VERSION}.tar.gz vmscale-${VERSION}-installed
###SHELLPACK build_start vmscale-${VERSION}-installed

TEMPFILE=`mktemp`
LINECOUNT=`wc -l $0 | awk '{print $1}'`
CSTART=`grep -n "BEGIN PATCH FILE" $0 | tail -1 | awk -F : '{print $1}'`
tail -$(($LINECOUNT-$CSTART)) $0 | grep -v "^###" > $TEMPFILE.patch

cat $TEMPFILE.patch | patch -p1
RETVAL=$?
rm $TEMPFILE $TEMPFILE.patch
if [ $RETVAL -ne 0 ]; then
	exit $SHELLPACK_ERROR
fi
for NEWCASE in "case-lru-file-ddspread"; do
	chmod a+x $NEWCASE
done

echo vmscale installed successfully
exit $SHELLPACK_SUCCESS

==== BEGIN PATCH FILE ====
diff --git a/case-lru-file-ddspread b/case-lru-file-ddspread
new file mode 100755
index 0000000..faff47c
--- /dev/null
+++ b/case-lru-file-ddspread
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+# measure spread of dd performance
+
+source ./hw_vars
+
+for i in `seq 1 $nr_cpu`; do
+	create_sparse_file $SPARSE_FILE-$i $((10 * mem / nr_cpu))
+	timeout --foreground -s INT 1800 dd bs=4k if=$SPARSE_FILE-$i of=/dev/null 2>&1
+done
+
+wait
+
+rm `seq -f $SPARSE_FILE-%g 1 $nr_cpu`
diff --git a/case-lru-file-readonce b/case-lru-file-readonce
index 5a3cabd..bb127e4 100755
--- a/case-lru-file-readonce
+++ b/case-lru-file-readonce
@@ -11,7 +11,7 @@ source ./hw_vars
 for i in `seq 1 $nr_cpu`
 do
 	create_sparse_file $SPARSE_FILE-$i $((10 * mem / nr_cpu))
-	cp $SPARSE_FILE-$i /dev/null &
+	$TIME_CMD cp $SPARSE_FILE-$i /dev/null 2>&1 &
 done
 
 wait
diff --git a/case-lru-file-readtwice b/case-lru-file-readtwice
index 3e2f9f0..3ed4a79 100755
--- a/case-lru-file-readtwice
+++ b/case-lru-file-readtwice
@@ -18,8 +18,8 @@ source ./hw_vars
 for i in `seq 1 $nr_cpu`
 do
 	create_sparse_file $SPARSE_FILE-$i $((10 * mem / nr_cpu))
-	cp $SPARSE_FILE-$i /dev/null &
-	cp $SPARSE_FILE-$i /dev/null &
+	$TIME_CMD cp $SPARSE_FILE-$i /dev/null &
+	$TIME_CMD cp $SPARSE_FILE-$i /dev/null &
 done
 
 wait
diff --git a/hw_vars b/hw_vars
index 758d32c..138bf84 100755
--- a/hw_vars
+++ b/hw_vars
@@ -12,6 +12,11 @@ SPARSE_FILE=$SPARSE_ROOT/sparse-${0/.*case-/}
 
 PIDFILE=$SPARSE_ROOT/${0/.*case-/}.pid
 
+TIME_CMD=`which time`
+if [ "$TIME_CMD" = "" ]; then
+	TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
+	TIME_CMD="time"
+fi
 
 # sparse files won't work as expected on tmpfs/nfs
 create_sparse_root () {
