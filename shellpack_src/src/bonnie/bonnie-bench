#!/bin/bash

###SHELLPACK preamble bonnie-bench 1.03e

DATASET_SIZE=$((2*1048576))
NR_FILES=1024
NR_DIRECTORIES=1
MACHINE=`hostname`
ITERATIONS=3
FSYNC=no
FSYNC_PARAM=

###SHELLPACK parseargBegin
###SHELLPACK parseargInstall
###SHELLPACK parseargParam --dataset		DATASET_SIZE
###SHELLPACK parseargParam --nr_files		NR_FILES
###SHELLPACK parseargParam --nr_directories	NR_DIRECTORIES
###SHELLPACK parseargParam --iterations		ITERATIONS
###SHELLPACK parseargYes   --sync		FSYNC
###SHELLPACK parseargEnd

###SHELLPACK check_install_required bonnie-${VERSION}

DIRECTORY_SIZE=$((DATASET_SIZE/NR_FILES))
NR_FILES=$((NR_FILES/1024))
DATASET_SIZE=$((DATASET_SIZE/1048576))
if [ $NR_FILES -eq 0 ]; then
	NR_FILES=1
fi
if [ "$FSYNC" = "yes" ]; then
	FSYNC_PARAM=-b
fi

USER_PARAM=
if [ "`whoami`" = "root" ]; then
	USER_PARAM="-u root"
fi

cd $SHELLPACK_SOURCES/bonnie-${VERSION}-installed

echo ./sbin/bonnie++ $FSYNC_PARAM -r 0 \
	-d $TESTDISK_DIR \
	-s $DATASET_SIZE \
	-n $NR_FILES:$DIRECTORY_SIZE:$DIRECTORY_SIZE:$NR_DIRECTORIES \
	-m $MACHINE | tee $LOGDIR_RESULTS/bonnie-params
###SHELLPACK iteration_begin $ITERATIONS
	echo Starting iteration $ITERATION
	save_rc ./sbin/bonnie++ $FSYNC_PARAM $USER_PARAM -r 0 \
		-d $TESTDISK_DIR \
		-s $DATASET_SIZE \
		-n $NR_FILES:$DIRECTORY_SIZE:$DIRECTORY_SIZE:$NR_DIRECTORIES \
		-m $MACHINE \
		2>&1 | tee $LOGDIR_RESULTS/bonnie.$ITERATION

	recover_rc
	if [ $? -ne 0 ]; then
		die Failed to run bonnie
	fi
###SHELLPACK iteration_end

exit $SHELLPACK_SUCCESS
