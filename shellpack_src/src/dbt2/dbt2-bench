#!/bin/bash
###SHELLPACK preamble dbt2-bench 0

DBDRIVER=postgres
DBUSER=nobody
EFFECTIVE_CACHESIZE=$((756*1048576))
SHARED_BUFFERS=$((32*1048576))
WORK_MEM=$((32*1048576))
POSTGRES_VERSION=9.6.1

install-depends python-singledispatch
install-depends python-rpy2

###SHELLPACK parseargBegin
###SHELLPACK parseargInstall
###SHELLPACK parseargParam --effective-cachesize EFFECTIVE_CACHESIZE
###SHELLPACK parseargParam --shared-buffers      SHARED_BUFFERS
###SHELLPACK parseargParam --work-mem            WORK_MEM
###SHELLPACK parseargParam --dbdriver            DBDRIVER
###SHELLPACK parseargParam --scale-factor        SCALE_FACTOR
###SHELLPACK parseargParam --duration            DURATION
###SHELLPACK parseargParam --min-users           MIN_USERS
###SHELLPACK parseargParam --max-users           MAX_USERS
###SHELLPACK parseargYes   --setup-only          SETUP_ONLY
###SHELLPACK parseargYes   --bench-only          BENCH_ONLY
###SHELLPACK parseargEnd

###SHELLPACK check_external_install_required dbttoolsbuild dbttoolsbuild-0 0
###SHELLPACK check_install_required dbt2-${VERSION} --dbdriver ${DBDRIVER}
###SHELLPACK monitor_hooks

echo Configuring paths for $DBDRIVER
export PATH=$SHELLPACK_SOURCES/dbt2-${VERSION}-installed/bin:$PATH
export DBT2PGROOT=$SHELLPACK_SOURCES/dbt2-${VERSION}-installed/data
export DBT2DBNAME=dbt2
export DBT2PGDATA=$DBT2PGROOT/$DBT2DBNAME
mkdir -p $DBT2PGROOT
chmod a+x $HOME
chmod a+rwx $DBT2PGROOT
if [ "$DBDRIVER" = "postgres" ]; then
	PSQL=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/bin/psql
	RUNDBUSER="su -s /bin/bash $DBUSER -c"
	export PATH=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/bin:$PATH
	export LD_LIBRARY_PATH=$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/lib:$SHELLPACK_SOURCES/postgresbuild-${POSTGRES_VERSION}-installed/lib64
	export PGHOST=localhost
	export PGPORT=5432
	$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop
fi
if [ -e /opt/python-marvin/bin/python ]; then
	export PATH=/opt/python-marvin/bin:$PATH
fi

cd $DBT2PGROOT
if [ "$BENCH_ONLY" != "yes" ]; then
	# Initialise database
	$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop
	if [ -e $DBT2PGDATA ]; then
		echo Dropping existing database
		$RUNDBUSER "dbt2-pgsql-build-db -r"
	fi
	$TIME_CMD -o $LOGDIR_RESULTS/time-install.log $RUNDBUSER "dbt2-pgsql-build-db -w $SCALE_FACTOR"
	if [ $? -ne 0 ]; then
		die Failed to initialise database
	fi
fi

if [ "$SETUP_ONLY" = "yes" ]; then
	exit $SHELLPACK_SUCCESS
fi

chmod a+w $SHELLPACK_TEMP
echo Running users $MIN_USERS to $MAX_USERS
###SHELLPACK threads_stride_alt_fixed_begin $MIN_USERS $MAX_USERS 6
	monitor_pre_hook $LOGDIR_RESULTS $NR_THREADS
	mmtests_activity users-$NR_THREADS

	# Shutdown previous instance and wait
	$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop

	echo Executing users $NR_THREADS/$MAX_USERS
	$TIME_CMD -o $LOGDIR_RESULTS/time-${NR_THREADS}.log $RUNDBUSER "	\
		LD_LIBRARY_PATH=$LD_LIBRARY_PATH dbt2-run-workload -a pgsql \
		-w $SCALE_FACTOR	\
		-c $NR_THREADS		\
		-d $DURATION		\
		-o $SHELLPACK_TEMP/dbt2-run" 2>&1 | tee dbt2-${NR_THREADS}.log
	cp $SHELLPACK_TEMP/dbt2-run/report.txt $LOGDIR_RESULTS/dbt2-${NR_THREADS}.report
	cp $SHELLPACK_TEMP/dbt2-run/mix.log    $LOGDIR_RESULTS/dbt2-${NR_THREADS}.mix

	# Record full dbt2 run logs
	pushd $SHELLPACK_TEMP > /dev/null
	tar -czf $LOGDIR_RESULTS/dblogs-${NR_THREADS}.tar.gz dbt2-run
	popd > /dev/null

	rm -rf $SHELLPACK_TEMP/dbt2-run
	$RUNDBUSER "rm -rf $SHELLPACK_TEMP/dbt2-run"
	monitor_post_hook $LOGDIR_RESULTS $NR_THREADS
###SHELLPACK threads_stride_end
$SHELLPACK_INCLUDE/shellpack-bench-${DBDRIVER}build --stop

exit $SHELLPACK_SUCCESS
